'use strict';const levels={error:5,warn:4,info:3,debug:2};class Logger{constructor(a,b){b=b||'info',this.name=a,this.formattedName=a?`, name=${JSON.stringify(a)}`:'',this.setLevel(b)}setLevel(a){if(!levels[a])throw new TypeError(`unknown error level ${a}`);return this.level=levels[a],this}log(a,b){if(!b||'string'!=typeof b||!levels[b])throw new TypeError(`Level must be one of [${levels.keys.join(', ')}].`);let c={};if(levels[b]>=this.level){if('string'==typeof a)c={msg:a};else if('[object Object]'===Object.prototype.toString.call(a))c=a;else throw new TypeError(`Unsupported message type ${typeof a}`);const d=Object.keys(c).reduce((e,f)=>{if('name'===f||'level'===f||'time'===f)return e;let g=c[f];return g=g.toString?g.toString():g,`${e}, ${f}=${JSON.stringify(g)}`},'');console.log(`time=${new Date().toISOString()}, level=${b}${this.formattedName}${d}`)}}error(a){this.log(a,'error')}warn(a){this.log(a,'warn')}info(a){this.log(a,'info')}debug(a){this.log(a,'debug')}}module.exports=Logger;
